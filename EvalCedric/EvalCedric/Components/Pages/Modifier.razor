@page "/modifier/{Id:int}"
@rendermode InteractiveServer

@using EvalCedric.Data
@using EvalCedric.Models
@using Microsoft.EntityFrameworkCore

@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Modification de : @(unicornToEdit?.Name ?? "...")</PageTitle>

@if (unicornToEdit != null)
{
    <h3><i class="fas fa-magic text-warning"></i> Modification du dossier de @unicornToEdit.Name</h3>

   
    <EditForm Model="@unicornToEdit" OnValidSubmit="HandleValidSubmit">

        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" />

        <div class="mb-3">
            <label for="name" class="form-label">Nom de la Licorne</label>
            <InputText id="name" class="form-control" @bind-Value="unicornToEdit.Name" />
        </div>

      
        <div class="mb-3">
            <label for="dob" class="form-label">Date de Naissance</label>
            <InputDate id="dob" class="form-control" @bind-Value="unicornToEdit.DateOfBirth" />
        </div>

        <div class="mb-3">
            <label for="color" class="form-label">Couleur</label>
            <InputText id="color" class="form-control" @bind-Value="unicornToEdit.Color" />
        </div>

        <div class="mb-3">
            <label for="diet" class="form-label">Régime Alimentaire</label>
            <InputText id="diet" class="form-control" @bind-Value="unicornToEdit.Diet" />
        </div>

        <div class="mb-3">
            <label for="origin" class="form-label">Origine</label>
            <InputText id="origin" class="form-control" @bind-Value="unicornToEdit.Origin" />
        </div>

        <div class="mb-3">
            <label for="habitat" class="form-label">Habitat</label>
            <InputText id="habitat" class="form-control" @bind-Value="unicornToEdit.Habitat" />
        </div>

        <div class="mb-3">
            <label for="breed" class="form-label">Race</label>
            <InputSelect id="breed" class="form-select" @bind-Value="unicornToEdit.BreedId">
                <option value="0" disabled>-- Sélectionnez une race --</option>
                @foreach (var breed in availableBreeds)
                {
                    <option value="@breed.Id">@breed.Name</option>
                }
            </InputSelect>
        </div>

        <div class="mb-3">
            <label for="powers" class="form-label">Pouvoirs Magiques</label>
            <InputTextArea id="powers" class="form-control" @bind-Value="unicornToEdit.MagicalPowers" rows="3" />
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="unicornToEdit.Description" rows="5" />
        </div>

        <div class="mb-3">
            <label for="imageUrl" class="form-label">URL de l'image</label>
            <InputText id="imageUrl" class="form-control" @bind-Value="unicornToEdit.ImageUrl" />
        </div>

        <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Enregistrer les modifications</button>
        <button type="button" class="btn btn-secondary" @onclick="AnnulerModification">Annuler</button>

    </EditForm>
}
else
{
    <p>Chargement des données pour modification...</p>
}


@code {
    [Parameter]
    public int Id { get; set; }

    private Unicorn? unicornToEdit;
    private List<Breed> availableBreeds = new();

    protected override async Task OnInitializedAsync()
    {
        unicornToEdit = await DbContext.Unicorns.FindAsync(Id);
        availableBreeds = await DbContext.Breeds.ToListAsync();
    }

    private async Task HandleValidSubmit()
    {
        if (unicornToEdit != null)
        {
            DbContext.Unicorns.Update(unicornToEdit);
            await DbContext.SaveChangesAsync();
            NavigationManager.NavigateTo($"/profil/{Id}");
        }
    }

    private void AnnulerModification()
    {
        NavigationManager.NavigateTo($"/profil/{Id}");
    }
}